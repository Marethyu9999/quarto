[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Schule",
    "section": "",
    "text": "Vorwort",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "index.html#verwendete-software",
    "href": "index.html#verwendete-software",
    "title": "Schule",
    "section": "Verwendete Software",
    "text": "Verwendete Software\n\nQuarto\nExcalidraw\n\nwie beispielsweise in der Abbildung Beispiele für abiotische und biotische Faktoren eines Ökosystems oder in der Abbildung Optimumdiagramm mit abiotischen Faktoren\njedes hiermit erstelltes Bild müsste anclickbar sein, und damit einfach annotierbar\n\nVisual Studio Code\n\nmit den Extensions:\n\nExcalidraw\nQuarto\n\n\nMyScript Math Demo da ich viel zu faul bin um Latex zu lernen",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "biologie/ökosysteme.html",
    "href": "biologie/ökosysteme.html",
    "title": "2  Ökosysteme",
    "section": "",
    "text": "2.1 Einleitung",
    "crumbs": [
      "Biologie",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Ökosysteme</span>"
    ]
  },
  {
    "objectID": "biologie/ökosysteme.html#einleitung",
    "href": "biologie/ökosysteme.html#einleitung",
    "title": "2  Ökosysteme",
    "section": "",
    "text": "2.1.1 Biotische und abiotische Faktoren im Ökosystem\n\n\n\n\n\n\nAbbildung 2.1: Beispiele für abiotische und biotische Faktoren eines Ökosystems\n\n\n\n\n\n2.1.2 Optimumdiagramm von abiotischen Faktoren\n\n\n\n\n\n\nAbbildung 2.2: Optimumdiagramm mit abiotischen Faktoren",
    "crumbs": [
      "Biologie",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Ökosysteme</span>"
    ]
  },
  {
    "objectID": "biologie/ökosysteme.html#konkurrenzformen",
    "href": "biologie/ökosysteme.html#konkurrenzformen",
    "title": "2  Ökosysteme",
    "section": "2.2 Konkurrenzformen",
    "text": "2.2 Konkurrenzformen\n\nselbe Art der Pflanzen → intra-spezifisch\nverschiedene Arten an Pflanzen → inter-spezifisch\n\nAußerhalb von Laborbedinungen unterliegen Organismen immer einem Konkurrenzkampf. Dabei kann es sich um innerartliche Konkurrenz handeln = intraspezifische Konkurrenz, wenn Organismen der selben Art um Ressourcen konkurrieren oder um zwischenartliche=interspezifische Konkurrenz, wenn verschiedene Spezien miteinander im Wettbewerb stehen.",
    "crumbs": [
      "Biologie",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Ökosysteme</span>"
    ]
  },
  {
    "objectID": "biologie/ökosysteme.html#ökologische-nische",
    "href": "biologie/ökosysteme.html#ökologische-nische",
    "title": "2  Ökosysteme",
    "section": "2.3 ökologische Nische",
    "text": "2.3 ökologische Nische\n→ Gesamtheit aller biotischen und abiotischen Ansprüchen einer Art\nDie ökologische Nische unterteilt sich in die reale Nische und die fundamentale Nische\n\n2.3.1 reale Nische\nNische mit Konkurrenz anderer Organismen\n\n\n2.3.2 fundamentale Nische\nNische ohne Konkurrenz anderer Organismen",
    "crumbs": [
      "Biologie",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Ökosysteme</span>"
    ]
  },
  {
    "objectID": "deutsch/spracherwerbstheorien.html",
    "href": "deutsch/spracherwerbstheorien.html",
    "title": "3  Spracherwerbstheorien",
    "section": "",
    "text": "3.1 Sapir-Whorf-Hypothese",
    "crumbs": [
      "Deutsch",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spracherwerbstheorien</span>"
    ]
  },
  {
    "objectID": "deutsch/spracherwerbstheorien.html#sapir-whorf-hypothese",
    "href": "deutsch/spracherwerbstheorien.html#sapir-whorf-hypothese",
    "title": "3  Spracherwerbstheorien",
    "section": "",
    "text": "3.1.1 Thesen\n\n“Sprache ist die Art und Weise zu sehen was der Mensch denkt”\n\nMenschen können nicht ohne Sprache denken (im Plenum)\n\n“Muttersprache beeinflusst die Art und Weise des Denkens”\n\n“kein Verständnis für die Phänomene fremder Kulturen”\n“es ergibt sich die Unmöglichkeit interkulturellen oder gar universalen Verstehens”\n\n“Sprache ist ausdrücklich eine Kulturleistung”\n\nund beruht somit nicht auf Instinkt\n\n“Sprache spiegelt die soziale Wirklichkeit wieder”\n\nOber- und Unterschicht verwenden verschiedene Sprachen und spiegeln somit Unterschiede wieder\n\n\n\n\n3.1.2 Konsequenzen der Hypothese\nAngenommen die Hypthese währe korrekt, könnten wir Andersprachige sehr viel schlechter wenn überhaupt verstehen, wir aufgrund des Einflusses der eigenen Muttersprache andere Erfahrung als Andere gemacht haben. Somit würde es stark erschwert sein, andere Kulturen überhaupt zu verstehen.",
    "crumbs": [
      "Deutsch",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spracherwerbstheorien</span>"
    ]
  },
  {
    "objectID": "deutsch/spracherwerbstheorien.html#footnotes",
    "href": "deutsch/spracherwerbstheorien.html#footnotes",
    "title": "3  Spracherwerbstheorien",
    "section": "",
    "text": "wird Piajet gesprochen↩︎",
    "crumbs": [
      "Deutsch",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spracherwerbstheorien</span>"
    ]
  },
  {
    "objectID": "mathe/vektor-integrale.html",
    "href": "mathe/vektor-integrale.html",
    "title": "4  Mathe Klausur zum 28.02.2024",
    "section": "",
    "text": "5 Für die Mathe Klausur relavante Themen",
    "crumbs": [
      "Mathe",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Mathe Klausur zum 28.02.2024</span>"
    ]
  },
  {
    "objectID": "mathe/vektor-integrale.html#vektoren",
    "href": "mathe/vektor-integrale.html#vektoren",
    "title": "4  Mathe Klausur zum 28.02.2024",
    "section": "5.1 Vektoren",
    "text": "5.1 Vektoren\n\n5.1.1 Was ist ein Vektor?\nEin Vektor wie \\(\\vec{t}=\\begin{pmatrix}2\\\\4\\\\6\\end{pmatrix}\\) sieht wiefolgt aus:\n\n\nCode\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\nt = np.array([2, 4, 6])\n\nax.quiver(0, 0, 0, t[0], t[1], t[2])\n\nax.set_xlim([0, 10])\nax.set_ylim([0, 10])\nax.set_zlim([0, 10])\n\nax.set_xlabel('X')\nax.set_ylabel('Y')\nax.set_zlabel('Z')\n\nplt.show()\n\n\n\n\n\n\n\n\nAbbildung 5.1: Ein Beispiel von einem 3D-Vektor\n\n\n\n\n\noder in 2D (heißt der Vektor ist jetzt \\(\\vec{t} = \\begin{pmatrix}2\\\\4\\end{pmatrix}\\)):\n\n\nCode\nimport matplotlib.pyplot as plt\n\nvector = (2, 4)\n\nplt.quiver(0, 0, vector[0], vector[1], angles='xy', scale_units='xy', scale=1)\nplt.xlim(-1, 3)\nplt.ylim(-1, 5)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.grid()\nplt.show()\n\n\n\n\n\n\n\n\nAbbildung 5.2: Ein Beispiel von einem 2D-Vektor\n\n\n\n\n\nund hat sowohl eine Richtung als auch einen Betrag. Sie können außerdem theoretisch unendlich viele Dimensionen haben.\n\n\n5.1.2 Beträge\nSie haben sowohl eine Richtung als auch einen Betrag, welcher wie folgt errechnet wird: \\[\\vec{v} = \\sqrt{x^2 + y^2 + z^2}\\] Was in unserem Fall folgendes heißt: \\(\\sqrt{2^2+4^2+6^2}=7,48\\)\n\n5.1.2.1 Addition\nVektoren zu addieren ist denkbar einfach, wie hier: \\[\\begin{pmatrix}4\\\\-1\\\\2\\end{pmatrix}+\\begin{pmatrix}3\\\\2\\\\-4\\end{pmatrix}=\\begin{pmatrix}7\\\\1\\\\-2\\end{pmatrix}\\] Wie vielleicht zu erkennen ist, werden jediglich die Werte der selbigen Dimensionen addiert, was heißt: \\[\\begin{pmatrix}x_1\\\\y_1\\\\z_1\\end{pmatrix}+\\begin{pmatrix}x_2\\\\y_2\\\\z_3\\end{pmatrix}=\\begin{pmatrix}x_3\\\\y_3\\\\z_3\\end{pmatrix}\\]\n\n5.1.2.1.1 Graphische Addition\n\n\nCode\nimport matplotlib.pyplot as plt\n\nvector1 = (4, -1)\nvector2 = (3, 2)\nadded_vector = (vector1[0] + vector2[0], vector1[1] + vector2[1])\n\nplt.quiver(0, 0, vector1[0], vector1[1], angles='xy', scale_units='xy', scale=1, color='blue', label='Vector 1')\nplt.quiver(0, 0, vector2[0], vector2[1], angles='xy', scale_units='xy', scale=1, color='red', label='Vector 2')\nplt.quiver(0, 0, added_vector[0], added_vector[1], angles='xy', scale_units='xy', scale=1, color='green', label='Added Vector')\n\n# Pointing from vec1 to added_vector\nplt.quiver(vector1[0], vector1[1], added_vector[0] - vector1[0], added_vector[1] - vector1[1], angles='xy', scale_units='xy', scale=1, color='black', linestyle='dashed')\n\n# Pointing from vec2 to added_vector\nplt.quiver(vector2[0], vector2[1], added_vector[0] - vector2[0], added_vector[1] - vector2[1], angles='xy', scale_units='xy', scale=1, color='black', linestyle='dashed')\nplt.scatter(0, 0, color='black', label='Origin')\nplt.xlim(-1, 8)\nplt.ylim(-2, 5)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.grid()\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nAbbildung 5.3: Wie Vektoren Graphisch addiert werden können\n\n\n\n\n\n\n\n\n\n5.1.3 Subtraktion\nSubtraktion von Vektoren ist praktisch identisch zur Addition\n\n\n5.1.4 Multiplikation mit Skalaren\nUm diese Art der Multiplikation zu verstehen muss der Begriff Skalar verstanden werden, der einfach nur heißt: Zahl welche mit Vektoren verrechnet wird und kein Vektor ist\nAls Beispiel nehme ich jetzt mal \\(\\vec{a}=\\begin{pmatrix}2\\\\2\\end{pmatrix}\\) und \\(\\begin{pmatrix}2\\\\2\\end{pmatrix}*2=\\begin{pmatrix}4\\\\4\\end{pmatrix}\\)\nAlso: \\[\\vec{v} = \\begin{pmatrix} x_1\\\\y_1 \\end{pmatrix}\\] \\[\\begin{pmatrix}x_1\\\\y_1\\end{pmatrix} * t = \\begin{pmatrix}x_1*t\\\\y_1*t\\end{pmatrix} = \\begin{pmatrix}x_2\\\\y_2\\end{pmatrix}\\]\n\n5.1.4.0.1 Graphische Multiplikation mit Skalaren\n\n\nCode\nimport matplotlib.pyplot as plt\n\nvector = (2, 2)\nmultiplied_vector = (vector[0] * 2, vector[1] * 2)\n\nplt.quiver(0, 0, vector[0], vector[1], angles='xy', scale_units='xy', scale=1, color='blue', label='Original Vector')\nplt.quiver(0, 0, multiplied_vector[0], multiplied_vector[1], angles='xy', scale_units='xy', scale=1, color='red', label='Multiplied Vector')\n\nplt.xlim(-1, 5)\nplt.ylim(-1, 5)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.grid()\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nAbbildung 5.4: Graphische Multiplikation mit einem Skalar\n\n\n\n\n\n\n5.1.4.0.1.1 Beispiele der Multiplikation\n\n\\((-5) * \\begin{pmatrix}-2\\\\1\\\\-1\\end{pmatrix} = \\begin{pmatrix}10\\\\-5\\\\5\\end{pmatrix}\\)\n\\(7 * \\begin{pmatrix}1\\\\2\\\\5\\end{pmatrix} = \\begin{pmatrix}7\\\\14\\\\35\\end{pmatrix}\\)\n\\(\\frac{1}{2} * \\begin{pmatrix}4\\\\6\\\\8\\end{pmatrix} = \\begin{pmatrix}2\\\\3\\\\4\\end{pmatrix}\\)\n\n\n\n\n\n5.1.5 Vektoren und Geraden\nMit Vektoren können Geraden ähnlich wie mit der “normalen” Formel \\(t(x) = mx+n\\) berechnet werden.  Nur ist die Formel hier \\(x = \\vec{p} + r * \\vec{u}\\)\n\n\\(\\vec{p}\\): Stützvektor\n\nBeginnt im Ursprung und berührt die Gerade in einem Punkt\n\n\\(\\vec{u}\\): Richtungsvektor\n\nliegt auf der Gerade, Richtung ist egal\n\n\n\nHier ein Beispiel für einen Vektor der eine Gerade bestimmt: \\(g: \\vec{x} =  \\begin{pmatrix} 1 \\\\ -3 \\end{pmatrix} + t * \\begin{pmatrix}2 \\\\ 2\\end{pmatrix}\\)\n\n5.1.5.1 Beispiele von Geraden als Vektoren\n\nFormel: \\(g: \\vec{x} = \\begin{pmatrix}1\\\\1\\\\2\\end{pmatrix} + t * \\begin{pmatrix}0\\\\-2\\\\7\\end{pmatrix}\\)\n\\(P_1\\): \\(\\begin{pmatrix}1\\\\1\\\\2\\end{pmatrix} + 1 * \\begin{pmatrix}0\\\\-2\\\\7\\end{pmatrix} = \\begin{pmatrix}1\\\\-1\\\\9\\end{pmatrix} = P_1(1|-1)\\)\n\\(P_2\\): \\(\\begin{pmatrix}1\\\\1\\\\2\\end{pmatrix} + 2 * \\begin{pmatrix}0\\\\-2\\\\7\\end{pmatrix} = \\begin{pmatrix}1\\\\-3\\\\16\\end{pmatrix} = P_2(1|-3)\\)\n\nJede andere Zahl als hier als Skalar für \\(t\\) einsetzbar, und würde die gerade \\(g\\) berühren, und somit kann theoretisch jeder Punkt ermittelt werden.\n\n\n\n5.1.6 gegenseitige Lage von Geraden\n\nparallel\n\nsie haben keinen Schnittpunkt\nRichtungsvektoren sind parallel zueinander\n\nidentisch\nwindschief\n\nhaben keinen Schnittpunkt\nweder parallel noch identisch\n\nschneidend\n\nbesitzen genau einen Schnittpunkt\n\n\n\n\n\n5.1.7 S. 187\n\n5.1.7.1 Nr. 4\n\n5.1.7.1.1 a)",
    "crumbs": [
      "Mathe",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Mathe Klausur zum 28.02.2024</span>"
    ]
  },
  {
    "objectID": "mathe/vektor-integrale.html#integrale",
    "href": "mathe/vektor-integrale.html#integrale",
    "title": "4  Mathe Klausur zum 28.02.2024",
    "section": "5.2 Integrale",
    "text": "5.2 Integrale\n\n5.2.1 Was sind Integrale?\nDie Integralrechnung ist ein Zweig der Infinitesimalrechnung, der zusammen mit der Differentialrechnung die mathematische Analysis bildet. Sie ist aus der Aufgabe entstanden, Flächeninhalte oder Volumina zu berechnen, die durch gekrümmte Linien oder Flächen begrenzt sind.\nUnter dem Oberbegriff Integral werden das unbestimmte und das bestimmte Integral einer Funktion zusammengefasst. Hier sind die wichtigsten Aspekte:\n\nUnbestimmtes Integral: Eine Funktion F ist eine Stammfunktion der Funktion f, wenn ihre Ableitung F’ genau die ursprüngliche Funktion f ist. Das unbestimmte Integral wird verwendet, um Stammfunktionen zu finden.\nBestimmtes Integral: Das bestimmte Integral einer Funktion f ergibt eine Zahl. Es gibt den Inhalt der Fläche an, die im Intervall zwischen dem Graphen von f und der x-Achse liegt. Die Integrationsgrenzen a und b definieren den Bereich.\n\n\n\n5.2.2 Wie werden Integrale gebildet?\nEin Beispiel eines Integrals ist \\(\\int_{-1}^{1} (2x + 1)dx\\), welcher folgendes aussagt: Der Bereich von dem wir den Flächeninhalt wollen ist -1 bis 1 und die Formel der Funktion ist \\(f(x)=2x+1\\).\n\n\n5.2.3 Hauptsatz der Differenzial- und Integralrechnung\n\\[\n\\int_{a}^{b}  f(x)t=F(b)-F(a)\n\\]\n\n\\(F(x)\\) ist die Stammfunktion der Funktion \\(f(x)\\).\n\\(F(x)\\) ist somit \\(f(x)\\) hochgeleitet (heißt umgekehrtes Ableiten)\n\n\n5.2.3.1 Beispiel des Haupsatzes der Integralrechnung\n\nDie Formel finden:\\(f(x)\\) finden (heißt die Zahlen vor dx lesen):\\(F(x)\\) finden (hochleiten):\\(a\\) und \\(b\\) einsetzen und ausrechnen:\n\n\n\\(\\int_0^4 x^2 dx\\)\n\n\n\\(f(x)=x^2\\)\n\n\n\\(F(x) = \\frac{1}{3} * x^3\\)\n\n\n\\(F(4) - F(0) = 21,\\overline{3} + 0 = 21,\\overline{3}\\)\n\noder das Ergebnis in einer anderen schreibweise: \\(f(x) = x^2; [0;4]; F(x)=\\frac{1}{3}x^3\\)",
    "crumbs": [
      "Mathe",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Mathe Klausur zum 28.02.2024</span>"
    ]
  },
  {
    "objectID": "philosophie/kultur-essay.html",
    "href": "philosophie/kultur-essay.html",
    "title": "5  Essay über Kultur",
    "section": "",
    "text": "5.1 Frage:",
    "crumbs": [
      "Philosophie",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Essay über Kultur</span>"
    ]
  },
  {
    "objectID": "philosophie/kultur-essay.html#frage",
    "href": "philosophie/kultur-essay.html#frage",
    "title": "5  Essay über Kultur",
    "section": "",
    "text": "»Wie viel Kultur verträgt der Mensch? Wann wird sie lächerlich?«\n\n\n5.1.1 Stichpunkte\n\nkonkrete Fragen:\n\nwas ist lächerliche Kultur? ➔ Wenn die Kultur\nGibt es ein Maximum?\nWas heißt Kultur konkret?\n\nKulturtheorien\n\nkann man Kultur ablehnen?\n\nBezug zum Thema Glück soll hergestellt werden\n\nverspricht die Kultur den Menschen Glück? ➔ Sie verspricht dem Menschen etwas was er erwarten kann ➜ Sicherheit\nWelche Verbindung hat Kultur zu Glück? ➔ Wie wir Glück definieren hängt mit Kultur zusammen\n\nAufführung von Kulturtheorien\n\n»Kultur ist alles nicht-natürliche« — Gehlen (S. 48-50)\n»Sprache als Bedingung zur Kultur« — Cassirer (S. 54-55)\n\nWenn ein Mensch die Sprache aufgrund von Komplexität nicht versteht, ist es zuviel?\n\n»Unterteilung in Es, Ich und Überich« — Freud",
    "crumbs": [
      "Philosophie",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Essay über Kultur</span>"
    ]
  },
  {
    "objectID": "philosophie/kultur-essay.html#meine-antwort",
    "href": "philosophie/kultur-essay.html#meine-antwort",
    "title": "5  Essay über Kultur",
    "section": "5.2 Meine Antwort",
    "text": "5.2 Meine Antwort\nWenn ich mir die Frage stelle, wie viel Kultur der Mensch verträgt, muss ich mich eigentlich zuerst fragen, was Kultur überhaupt ist, also sollte man Kulturtheorien auflisten.\nGehlen erklärt sich die Kultur so, dass sie alles, was nicht natürlich ist, heißt zum Beispiel, die Art, wie wir leben, die Art, wie wir an Essen kommen und damit die Art, wie wir denken; damit sei der Mensch durch “Reduktion und Verunsicherung des Instinktlebens” geprägt. Hier wird der Unterschied zwischen Mensch und Tier so illustriert, dass Tiere rein nach Instinkt handeln, und der Mensch nach Instinkt und Kultur handelt und sich somit ebendiese Kultur zur zweiten Natur macht.\nFreud allerdings behauptet, die Psyche seie in Es, Ich und Überich unterteilt, welche miteinander interagieren; das Ich sind die eigenen Gedanken, das Es die Instinkte und das Überich die anerzogene Moral/Ethik von Erziehungspersonen1 . Für mich persönlich stellt sich dann die Frage, ob beides nicht verknüpfbar wäre, da das Überich und Ich nicht so instinktiv geprägt sind wie das Es.\nCassirer bringt zu den beiden Anderen auch noch einen Bezug zur Sprache rein und definiert die Sprache als das “Geben von Namen”.\nPersönlich habe ich Kultur zumeist als Dogma der Gesellschaft wahrgenommen und tendiere somit auch in Richtung Freuds.\nWenn wir uns nun fragen, was Kultur denn jetzt eigentlich mit Glück zu tun hat, können wir verschiedene Perspektiven annehmen; zuerst könnten wir sagen, dass, was wir zu unserer zweiten Natur(Gehl) eine Kontrasterfahrung bilden könnten und dadurch beispielsweise laut Schmied eine Kontrasterfahrung hätten, damit würde die Kultur mehr oder weniger vorschreiben, wie wir agieren müssten, um Glück zu empfinden.\nMit Precht’s Theorie hingegen könnte man die vorherige These noch weiter unterstützen, da Kultur zu Teilen mit diktieren würde, was der Mensch als anstrebenswert empfindet, was noch weiter mit Freud’s Überich vereinbar ist.\nLetztlich sollte man sich die letzte Frage, also wann die Kultur lächerlich wird, stellen wozu ich behaupten würde, dass Kultur sobald Glück welches durch sie entstehen soll zu schwer zu erreichen wird, wenn also im Überich oder in der zweiten Natur Ziele eingesetzt sind, welche für ein Individuum fast unerreichbar sind, ist diese lächerlich.\nDieser Punkt wird zu Teilen auch von heutigen Geschehnissen unterstützt, beispielsweise war die Unterdrückung (wenn nicht Unterjochung) von Frauen zur Zeit all dieser Philosophen normal und diese verstanden dies (soweit ich weiß) als normal, heute allerdings erachten wir selbiges als schlecht, war Kultur dann nicht in ihrem Fall lächerlich.",
    "crumbs": [
      "Philosophie",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Essay über Kultur</span>"
    ]
  },
  {
    "objectID": "geschichte/juli-krise.html",
    "href": "geschichte/juli-krise.html",
    "title": "6  Die Juli Krise",
    "section": "",
    "text": "6.1 Zeistrahl",
    "crumbs": [
      "Geschichte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Die Juli Krise</span>"
    ]
  },
  {
    "objectID": "geschichte/juli-krise.html#zeistrahl",
    "href": "geschichte/juli-krise.html#zeistrahl",
    "title": "6  Die Juli Krise",
    "section": "",
    "text": "Zeitstahl des zweiten Weltkriegs (sollte in einem separaten Tab geöffnet werden)\n\n\n\n6.1.1 Charakteristika eines Modernen Krieges\n\nBeschuss! Kampf auf großer Distanz\n\nGiftgaseinsatz\nArtillerie\nMaschinengewehre\n\nLogistik: Eisenbahntransport, Mobilität der Truppen durch Lastwagen\n“Kriegswirtschaft”\n\nEinsatz von Frauen in Rüstungsfabriken\nForschung & Erfindung zu Kriegszwecken\nKanalisierung der Rohstoffe",
    "crumbs": [
      "Geschichte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Die Juli Krise</span>"
    ]
  },
  {
    "objectID": "geschichte/juli-krise.html#folgen-wird-vermutlich-noch-ergänzt",
    "href": "geschichte/juli-krise.html#folgen-wird-vermutlich-noch-ergänzt",
    "title": "6  Die Juli Krise",
    "section": "6.2 Folgen (wird vermutlich noch ergänzt)",
    "text": "6.2 Folgen (wird vermutlich noch ergänzt)\n\n\n\nFolgen des Zweiten Weltkriegs",
    "crumbs": [
      "Geschichte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Die Juli Krise</span>"
    ]
  },
  {
    "objectID": "tesstrain/tesstrain.html",
    "href": "tesstrain/tesstrain.html",
    "title": "Anhang A — Ein OCR Modell auf meine Schrift trainieren",
    "section": "",
    "text": "A.1 Versuche",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ein OCR Modell auf meine Schrift trainieren</span>"
    ]
  },
  {
    "objectID": "tesstrain/tesstrain.html#versuche",
    "href": "tesstrain/tesstrain.html#versuche",
    "title": "Anhang A — Ein OCR Modell auf meine Schrift trainieren",
    "section": "",
    "text": "A.1.1 ein rein Englisches Modell\nModell und training data verfügbar\nFür das Englische Modell habe ich bisher eine meiner Einglisch Klausuren in etwa 220 Teile unterteilt, welche vorerst verwendet werden um das Modell zu trainieren.\nUm es zu testen, kann tesseract /mnt/d/Programming/tesstrain/data/eng_Erik-ground-truth/eva1_slice1.tif stdout --tessdata-dir /mnt/d/Programming/tesstrain/data -l eng_Erik --psm 7 ausgeführt werden.\nUm zu trainieren in /mnt/d/Programming/tesstrain sein und make training MODEL_NAME=eng_Erik MAX_ITERATIONS=300000 ausführen\n\nA.1.1.1 Timeline (in 10.000er Schritten)\n\nSatz: The term postcolonialism means firstly the historic time and secondly\n\nwhes term posterlanialine man foriotly the intinnc bimm oad ay eeentle\nWhwu tars postaolonallinm means fiestly the histinc thme and secorphld\nTiy tears posifaolioicalimm meams fiexstl the titisic tme and segorall\nThr term postficaolonialism meams fisitly the histac time and secoroll.\nTie term postoolonialism yeans fixistly the istiic time and sucarile,\nTBVhe term postoclnalisms means fisstly the histisic thrme and segorsle\nThe ters postcoloniabiss wmeass frstty the hetoric tirse and secenedh\nThe temm posicolonialiasm means fistlty the tistomic tirme and seconsle\nThe tem postoeclonialiasm means fiat the iistoric time and seconoll\nThe term postcolonialism means frsstl the histosic time and sucoreole\nThe tems postoclonialism means fixstly the histosic thime and secorole\nBhe tm postaclonialisms means fisstt the tistom time and sweormls,\nThe therm postaclonialisrm means firty the thistoric thrme and secrowolld\nThe term postcolonialisms means fiisty ithe historic thame and secenol\nTdhe nsm postcolonialisms means firsttky the histric ptire and secoenoll\nTe temm postcolonialism means firstly the tistosc time and secoreldl\nThe tamm postaclonialisms means firtty the histosic tim and secoroll\nThe tem postcclonialisms yeans firstty the historic thre and seconrold\nThe term pGostooclonialisms means fis iy the ristoric tire and ecrald\nThe term postoclonialism meass firsly the historic the and seceraled\nThe tesm postoclonialismm means firrtly the tistoric thime and seconcle\nThe temm postaclonialism means fisrttly the tistoric time and seconcle\nTVhe term postcolonialisms means fxtly the historic time and secorcole\nThe term postcolonialims means frmesly the historic time and secorole\nThe ters postcolonialims means fisssly the tistoric time and seconole\nThie term postcolonialisss means ficstly the historic time and secanole\nThe term postcolomnialims vyeans firisttly the tistoric tirme and seconol\nhe ters postcclonialisss meams fisstly the tistoric time and seconcle\nTie term postoclonialisms means fiissly the historic time and secondl\nThe trrm postcoclonialisss means firstly the tietoric time and secondl\n\nUnd hier das normale Tesseract eng Ergebniss: Che Jom pethecheiwbly) on Aas, poe Nefevi. Jin, cath vec.\nWie in den Ergebnissen zu sehen ist, ist die Datenbasis vermutlich zu klein und das Modell daher zu spezifisch.\n\n\n\nA.1.2 Ein multilinguelles Basismodell mit späteren finetuning",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ein OCR Modell auf meine Schrift trainieren</span>"
    ]
  },
  {
    "objectID": "tesstrain/tesstrain.html#nützliche-python-scripts",
    "href": "tesstrain/tesstrain.html#nützliche-python-scripts",
    "title": "Anhang A — Ein OCR Modell auf meine Schrift trainieren",
    "section": "A.2 Nützliche Python scripts",
    "text": "A.2 Nützliche Python scripts\n\nA.2.1 Ein Datei Umbenenner\nimport os\nimport sys\n\nif __name__ == '__main__':\n    if len(sys.argv) not in [4, 3]:\n        print('Usage: python file-renamer.py &lt;search_string&gt; &lt;replace_string&gt; [&lt;directory&gt;]')\n        sys.exit(1)\n\n    search_string = sys.argv[1]\n    replace_string = sys.argv[2]\n    directory = sys.argv[3] if len(sys.argv) == 4 else os.getcwd()\n\n    count = 0\n    for filename in os.listdir(directory):\n        file_path = os.path.join(directory, filename)\n        if os.path.isfile(file_path):\n            new_filename = filename.replace(search_string, replace_string)\n            new_file_path = os.path.join(directory, new_filename)\n            if filename != new_filename:\n                os.rename(file_path, new_file_path)\n                count += 1\n\n    print('Renamed {} files.'.format(count))\n\n\nA.2.2 Dateien ohne File-Extension mit .gt.txt versehen\nimport os\nimport sys\n\ndef rename_files_in_directory(directory):\n    \"\"\"\n    Renames files in a given directory by appending '.gt.txt' to their names.\n\n    Args:\n        directory (str): The path to the directory containing the files.\n\n    Returns:\n        None\n    \"\"\"\n    current_directory = directory\n    file_list = os.listdir(current_directory)\n\n    for file_name in file_list:\n        if not 'gt' in file_name and (file_name.endswith('.txt') or '.' not in file_name):\n            if '.' not in file_name:\n                new_name = file_name + '.gt.txt'\n            else:\n                new_name = file_name.replace('.txt', '.gt.txt')\n            os.rename(os.path.join(current_directory, file_name),\n                      os.path.join(current_directory, new_name))\n\n\nif __name__ == \"__main__\":\n    if len(sys.argv) &gt; 1:\n        directory = sys.argv[1]\n        rename_files_in_directory(directory)\n    else:\n        rename_files_in_directory(os.getcwd())\n\n\nA.2.3 File Präfixer\nimport os\nimport sys\n\n\ndef add_prefix(directory, prefix, recursive=False):\n    file_count = 0\n    for filename in os.listdir(directory):\n        file_path = os.path.join(directory, filename)\n        if os.path.isfile(file_path):\n            new_filename = prefix + filename\n            os.rename(file_path, os.path.join(directory, new_filename))\n            file_count += 1\n\n        if recursive and os.path.isdir(file_path):\n            count = add_prefix(file_path, prefix, recursive)\n            file_count += count\n\n    return file_count\n\n\nif __name__ == \"__main__\":\n    directory = input(\"Enter the directory path: \")\n    prefix = input(\"Enter the prefix: \")\n    recursive = input(\"Do you want to make it recursive (y/n)? \").lower() == 'y'\n\n    file_count = add_prefix(directory, prefix, recursive)\n    print(f\"{file_count} files renamed.\")",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ein OCR Modell auf meine Schrift trainieren</span>"
    ]
  }
]