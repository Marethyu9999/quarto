---
title: "Quarto Basics"
format:
  html:
    code-fold: true
jupyter: python3
---

For a demonstration of a line plot on a polar axis, see @fig-polar.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

```{python}
#| label: integral-demo
#| fig-cap: "Demonstrat#| #| ion of an integral"

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 10, 100)
y = np.sin(x)
plt.plot(x, y)
plt.fill_between(x, y, alpha=0.3)
plt.xlabel('x')
plt.ylabel('y')
plt.title('Integral Demo')
plt.show()
```

```{python}
import matplotlib.pyplot as plt
import numpy as np

my_vector = [3, 4]

# Define the vector components
x = my_vector[0]
y = my_vector[1]

# Create a plot
plt.figure(figsize=(6, 6))
plt.quiver(0, 0, x, y, angles='xy', scale_units='xy', scale=1, color='red', label='My Vector')
plt.xlim(-5, 5)
plt.ylim(-5, 5)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('2D Vector Visualization')
plt.grid(True)
plt.legend()
plt.show()

```